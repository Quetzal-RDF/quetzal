
prefix fn: <http://localhost:8083/>
prefix x: <http://www.drugbank.ca>
prefix xs: <http://www.w3.org/2001/XMLSchema>
prefix drug: <http://www.drugbank.ca>
prefix up: <http://uniprot.org/uniprot>

function fn:getDrugBankNames GET ( -> ?x ) 
service fn:getDrugBankNames [ ] -> "//x:row" :: "./x:drug" "xs:string"

function fn:getTransporters ( ?drug -> ?transporter ) 
table fn:getTransporters [ "funcData" -> post data ] -> "//x:row" :: "./x:drug" "xs:string" "./x:transporter" "xs:string" 

function drug:getProteinGeneFunctions GET ( ?ids -> ?geneFunction ?id ?type) 
service CONCAT("http://www.ebi.ac.uk/Tools/dbfetch/dbfetch?db=uniprot&format=xml&id=", ?ids) [ ] -> "/up:uniprot/up:entry/up:dbReference" ::  "./@id" "xs:string" "../up:accession[1]" "xs:string" "./@type" "xs:string" 

select ?d1 ?geneFunction where 
{
  {select ?geneFunction ?t2 ?type where 
  {
    { select (group_concat(?transporter; separator = '+') AS ?ids) where 
      {
        { select distinct ?transporter where 
          {
            BIND( fn:getDrugBankNames() AS ( ?drug ) )

            BIND( fn:getTransporters( ?drug ) AS ( ?drug ?transporter ) )
           } 
        limit 50 }
      }
    }
  
    BIND( drug:getProteinGeneFunctions( ?ids ) AS ( ?geneFunction ?t2 ?type ) )
  
    FILTER (?type = "GO")
  }}

  BIND( fn:getDrugBankNames() AS ( ?d1 ) )

  BIND( fn:getTransporters( ?d1 ) AS ( ?d1 ?t3 ) )

 }